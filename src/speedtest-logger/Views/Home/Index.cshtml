@model IEnumerable<speedtest_common.Objects.Result>

@{
    ViewBag.Title = "Speed Test Results";
}
<br />
<div id="chart_div"></div>
<br />
<h2>Tabulated Data</h2>
<table class="table">
    <tr>
        <th>
            Time
        </th>
        <th>
            Download Speed (kbps)
        </th>
        <th>
            Upload Speed (kbps)
        </th>
        <th>
            Ping Time (ms)
        </th>
        <th>
            Speedtest Server ID
        </th>


    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @item.logTime.ToString("dd/MM/yyyy HH:mm")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.download)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.upload)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ping)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.serverid)
            </td>
        </tr>
    }

</table>
<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript">
    google.load('visualization', '1', { packages: ['corechart', 'line'] });
    google.setOnLoadCallback(drawLineColors);

    function drawLineColors() {
        var data = new google.visualization.DataTable();
        data.addColumn('datetime', 'Time');
        data.addColumn('number', 'Speed Down (MBps)');
        data.addColumn('number', 'Speed Up (MBps)');
        data.addColumn('number', 'Ping Time (ms)');


        data.addRows([
            @ChartBuilder.chartString(Model)
        ]);
        //console.log(JSON.parse(JSON.stringify(data)));
        //data.removeColumn(3);
        var options = {
            chart: {
                //title: 'Broadband Speed'
            },

            width: 900,
            height: 600,
            hAxis: { showTextEvery: 5 },
            vAxes: {
                0: {
                    viewWindowMode: 'explicit',
                    viewWindow: {
                        max: 54,
                        min: 0
                    },
                    gridlines: {/*color: 'transparent'*/ },
                    title: 'Speed (MBps)'
                },
                1: {
                    viewWindow: {
                        max: 325,
                        min: 0
                    },
                    gridlines: { color: 'transparent' },
                    title: 'Ping Time (ms)'
                },
            },
            series: {
                // Gives each series an axis name that matches the Y-axis below.

                0: { axis: 'Down', targetAxisIndex: 0 },
                1: { axis: 'Up', targetAxisIndex: 0 },
                2: { axis: 'Ping', targetAxisIndex: 1 }

            },
            axes: {
                // Adds labels to each axis; they don't have to match the axis names.
                y: {

                    Down: {
                        label: 'Down (Mbps)'
                    }
                    ,
                    Up: {
                        label: 'Up (Mbps)',
                        minValue: 0,
                        viewWindow: {
                            min: 0,
                            max: 100
                        },
                        ticks: [0, 25, 50, 75, 100] // display labels every 25


                    },
                    Ping: { label: 'Ping (ms)' }
                },
                x: { 0: { label: 'Time' } }

            }
        };

        var chart = new google.charts.Line(document.getElementById('chart_div'));
        chart.draw(data, google.charts.Line.convertOptions(options));
    }

</script>